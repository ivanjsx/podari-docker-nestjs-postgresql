name: podari

networks:
  default:
    name: podari-default

volumes:
  pg_data:
    name: podari-pg-data

services:
  
  postgres:
    image: postgres:16-alpine
    container_name: podari-postgres
    restart: always
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      timeout: 60s
      interval: 5s
      retries: 12
  
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
      platforms:
        - "linux/amd64"
    pull_policy: build
    image: ivanjsx/podari-backend:latest
    container_name: podari-backend
    platform: "linux/amd64"
    restart: always
    env_file: .env
    depends_on:
      postgres:
        restart: true
        condition: service_healthy
    ports:
      - name: web
        host_ip: 127.0.0.1
        published: "3006"
        target: 3006
  
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
      platforms:
        - "linux/amd64"
    pull_policy: build
    image: ivanjsx/podari-frontend:latest
    container_name: podari-frontend
    platform: "linux/amd64"
    restart: always
    ports:
      - name: web
        host_ip: 127.0.0.1
        published: "3005"
        target: 80
